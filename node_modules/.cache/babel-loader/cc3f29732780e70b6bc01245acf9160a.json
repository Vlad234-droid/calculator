{"ast":null,"code":"var _jsxFileName = \"/Users/vladikbaryshpolets/Desktop/calculator/src/components/Calculator.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Wrapper, AnswerBlock, GetNumbers, Answer, FLexContainer, RowBlock, ExceptionH3 } from \"./StyledCalculator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calculator = () => {\n  _s();\n\n  const calcAct = useRef({\n    currentOperation: \"\",\n    currentNumberBefore: \"\",\n    currentNumberAfter: \"\",\n    prevMemo: \"\"\n  });\n  const [numbersDisplay, setNumbersDisplay] = useState(\"\");\n  const [results, setResults] = useState(null);\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n  }, []);\n  useEffect(() => {\n    if (results === \"Infinity\" || results === \"NaN\") {\n      alert(\"Never devide any numbers by zero, press OK and never do this\");\n      clear();\n    }\n  }, [results]);\n\n  const clickOperation = e => {\n    setNumbersDisplay(prev => `${prev}${e.target.innerText}`);\n\n    if (calcAct.current.currentOperation === '') {\n      calcAct.current.currentOperation = e.target.innerText;\n    } else if (calcAct.current.currentOperation !== '') {\n      const res = getResults(calcAct.current.currentNumberBefore, calcAct.current.currentNumberAfter, calcAct.current.currentOperation);\n      const strRes = res.toString();\n      calcAct.current.currentNumberBefore = strRes;\n      calcAct.current.currentNumberAfter = \"\";\n      calcAct.current.currentOperation = e.target.innerText;\n    }\n  };\n\n  const getItem = e => {\n    let getedItem = e.target.innerText;\n    if (+getedItem === 0 && (numbersDisplay === \"\" || numbersDisplay === 0)) return;\n\n    if (calcAct.current.currentOperation === \"\") {\n      calcAct.current.currentNumberBefore = calcAct.current.currentNumberBefore.concat(getedItem);\n    } else {\n      calcAct.current.currentNumberAfter = calcAct.current.currentNumberAfter.concat(getedItem);\n    }\n\n    setNumbersDisplay(numbersDisplay => `${numbersDisplay}${getedItem}`);\n  };\n\n  const memory = () => {\n    const res = getResults(calcAct.current.currentNumberBefore, calcAct.current.currentNumberAfter, calcAct.current.currentOperation) + Number(calcAct.current.prevMemo);\n    const strRes = res.toString();\n    calcAct.current.prevMemo = strRes;\n    calcAct.current.currentNumberBefore = \"\";\n    calcAct.current.currentNumberAfter = \"\";\n    calcAct.current.currentOperation = \"\";\n    setNumbersDisplay(() => \"\");\n  };\n\n  const memShowHandle = () => {\n    setResults(() => Number(calcAct.current.prevMemo));\n    calcAct.current.currentNumberBefore = calcAct.current.prevMemo;\n    calcAct.current.currentNumberAfter = \"\";\n    calcAct.current.currentOperation = \"\";\n    setNumbersDisplay(() => calcAct.current.currentNumberBefore);\n  };\n\n  const getResults = (prev, next, operation) => {\n    let isPointAppear = false;\n\n    if (prev.toString().includes(\".\") || next.toString().includes('.') || prev.toString().includes(\"%\") || next.toString().includes(\"%\")) {\n      isPointAppear = !isPointAppear;\n    }\n\n    let toFixedCheckPoint = isPointAppear ? 1 : 0;\n\n    switch (operation) {\n      case \"+\":\n        if (!next.includes(\"%\")) {\n          return +prev + +next;\n        } else {\n          return (+prev + +prev / 100 * +next.slice(0, -1)).toFixed(toFixedCheckPoint);\n        }\n\n      case \"*\":\n        if (!next.includes(\"%\")) {\n          return +prev * +next;\n        } else {\n          return +prev / 100 * (+next.slice(0, -1)).toFixed(toFixedCheckPoint);\n        }\n\n      case \"/\":\n        if (!next.includes(\"%\")) {\n          return +prev / +next;\n        } else {\n          return Number(+prev / (+next.slice(0, -1) / 100)).toFixed(1);\n        }\n\n      case \"-\":\n        if (!next.includes(\"%\")) {\n          return +prev - +next;\n        } else {\n          return +prev - (+prev / 100 * +next.slice(0, -1)).toFixed(toFixedCheckPoint);\n        }\n\n      default:\n        return operation;\n    }\n  };\n\n  const finalResult = () => {\n    const prevNumber = calcAct.current.currentNumberBefore;\n    const nextNumber = calcAct.current.currentNumberAfter;\n    let isPointAppear = false;\n\n    if (prevNumber.toString().includes(\".\") || nextNumber.toString().includes('.') || prevNumber.toString().includes(\"%\") || nextNumber.toString().includes(\"%\")) {\n      isPointAppear = !isPointAppear;\n    }\n\n    let toFixedCheckPoint = isPointAppear ? 1 : 0;\n\n    switch (calcAct.current.currentOperation) {\n      case \"+\":\n        if (!calcAct.current.currentNumberAfter.includes(\"%\")) {\n          setResults(() => (+prevNumber + +nextNumber).toFixed(toFixedCheckPoint));\n        } else {\n          setResults(() => (+prevNumber + +prevNumber / 100 * +calcAct.current.currentNumberAfter.slice(0, -1)).toFixed(toFixedCheckPoint));\n        }\n\n        break;\n\n      case \"*\":\n        if (!calcAct.current.currentNumberAfter.includes(\"%\")) {\n          setResults(() => (+prevNumber * +nextNumber).toFixed(toFixedCheckPoint));\n        } else {\n          setResults(() => (+prevNumber / 100 * +calcAct.current.currentNumberAfter.slice(0, -1)).toFixed(toFixedCheckPoint));\n        }\n\n        break;\n\n      case \"/\":\n        if (!calcAct.current.currentNumberAfter.includes(\"%\")) {\n          setResults(() => (+prevNumber / +nextNumber).toFixed(toFixedCheckPoint));\n        } else {\n          setResults(() => Number(+prevNumber / (+calcAct.current.currentNumberAfter.slice(0, -1) / 100)).toFixed(1));\n        }\n\n        break;\n\n      case \"-\":\n        if (!calcAct.current.currentNumberAfter.includes(\"%\")) {\n          setResults(() => (+prevNumber - +nextNumber).toFixed(toFixedCheckPoint));\n        } else {\n          setResults(() => +prevNumber - (+prevNumber / 100 * +calcAct.current.currentNumberAfter.slice(0, -1)).toFixed(toFixedCheckPoint));\n        }\n\n        break;\n\n      default:\n        return calcAct.current.currentOperation;\n    }\n\n    if (results !== null || results <= -1) {\n      const reverseResults = () => {\n        const res = getResults(calcAct.current.currentNumberBefore, calcAct.current.currentNumberAfter, calcAct.current.currentOperation);\n        const strRes = res.toString();\n        calcAct.current.currentNumberBefore = strRes;\n        calcAct.current.currentNumberAfter = \"\";\n        calcAct.current.currentOperation = \"\";\n        setResults(() => null);\n        setNumbersDisplay(() => strRes);\n      };\n\n      reverseResults();\n    }\n  };\n\n  const clear = () => {\n    setNumbersDisplay(() => \"\");\n    setResults(() => null);\n    calcAct.current.currentOperation = \"\";\n    calcAct.current.currentNumberBefore = \"\";\n    calcAct.current.currentNumberAfter = \"\";\n    calcAct.current.prevMemo = \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(AnswerBlock, {\n      children: [/*#__PURE__*/_jsxDEV(GetNumbers, {\n        children: numbersDisplay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Answer, {\n        children: results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FLexContainer, {\n      children: [/*#__PURE__*/_jsxDEV(RowBlock, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            background: \"#d0cccc\"\n          },\n          onClick: clear,\n          children: \"AC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: memory,\n          children: \"ME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \"%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => clickOperation(e),\n          children: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(RowBlock, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \"7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \"9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => clickOperation(e),\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(RowBlock, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => clickOperation(e),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(RowBlock, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => clickOperation(e),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(RowBlock, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \".\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ExceptionH3, {\n          onClick: finalResult,\n          children: \"=\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: memShowHandle,\n          children: \"MRC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Calculator, \"bt3KygyoX+Pk/8M4jLDJcn148Z4=\");\n\n_c = Calculator;\nexport default Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/calculator/src/components/Calculator.jsx"],"names":["React","useState","useEffect","useRef","Wrapper","AnswerBlock","GetNumbers","Answer","FLexContainer","RowBlock","ExceptionH3","Calculator","calcAct","currentOperation","currentNumberBefore","currentNumberAfter","prevMemo","numbersDisplay","setNumbersDisplay","results","setResults","window","addEventListener","handleKeyDown","alert","clear","clickOperation","e","prev","target","innerText","current","res","getResults","strRes","toString","getItem","getedItem","concat","memory","Number","memShowHandle","next","operation","isPointAppear","includes","toFixedCheckPoint","slice","toFixed","finalResult","prevNumber","nextNumber","reverseResults","background"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Wrapper, AnswerBlock, GetNumbers, Answer, \n        FLexContainer, RowBlock, ExceptionH3 } from \"./StyledCalculator\";\n\nconst Calculator = () => {\n\n    const calcAct = useRef({\n        currentOperation: \"\",\n        currentNumberBefore: \"\",\n        currentNumberAfter: \"\",\n        prevMemo: \"\",\n    })\n\n    const [numbersDisplay, setNumbersDisplay] = useState(\"\");\n\n    const [ results, setResults] = useState(null);\n\n    useEffect(() => {\n        window.addEventListener('keydown', handleKeyDown);\n    }, []);\n\n    useEffect(() => {\n        if(results === \"Infinity\" || results === \"NaN\") {\n            alert(\"Never devide any numbers by zero, press OK and never do this\")\n            clear()\n        }\n    }, [results])\n\n   \n    \n\n    const clickOperation = (e) => {\n        setNumbersDisplay((prev) => `${prev}${e.target.innerText}`)\n        if(calcAct.current.currentOperation === '') {\n            calcAct.current.currentOperation = e.target.innerText;\n        } else if (calcAct.current.currentOperation !== '') {\n            const res = getResults(calcAct.current.currentNumberBefore, calcAct.current.currentNumberAfter, calcAct.current.currentOperation)\n            const strRes = res.toString();\n            calcAct.current.currentNumberBefore = strRes;\n            calcAct.current.currentNumberAfter = \"\";\n            calcAct.current.currentOperation = e.target.innerText;\n        }\n    }\n\n    const getItem = (e) => {\n        let getedItem = e.target.innerText\n        if( +getedItem === 0 && (numbersDisplay === \"\" || numbersDisplay === 0 )) return\n        if(calcAct.current.currentOperation === \"\") {\n            calcAct.current.currentNumberBefore = calcAct.current.currentNumberBefore.concat(getedItem);\n        } else {\n            calcAct.current.currentNumberAfter = calcAct.current.currentNumberAfter.concat(getedItem);\n        }\n        setNumbersDisplay((numbersDisplay) => (`${numbersDisplay}${getedItem}`))\n    }\n\n    const memory = () => {\n        const res = getResults(\n        calcAct.current.currentNumberBefore, \n        calcAct.current.currentNumberAfter, \n        calcAct.current.currentOperation) + Number(calcAct.current.prevMemo);\n        const strRes = res.toString();\n        calcAct.current.prevMemo = strRes;\n        calcAct.current.currentNumberBefore = \"\";\n        calcAct.current.currentNumberAfter = \"\";\n        calcAct.current.currentOperation = \"\";\n        setNumbersDisplay(() => \"\")\n    }\n\n    const memShowHandle = () => {\n        setResults(() => Number(calcAct.current.prevMemo));\n        calcAct.current.currentNumberBefore = calcAct.current.prevMemo;\n        calcAct.current.currentNumberAfter = \"\";\n        calcAct.current.currentOperation = \"\";\n        setNumbersDisplay(() => calcAct.current.currentNumberBefore)\n    }\n\n    const getResults = (prev, next, operation) => {\n\n        let isPointAppear = false;\n        \n        if(prev.toString().includes(\".\") \n        || next.toString().includes('.') \n        || prev.toString().includes(\"%\")\n        || next.toString().includes(\"%\")) {\n            isPointAppear = !isPointAppear;\n        }   \n        let toFixedCheckPoint = isPointAppear ? 1 : 0;\n\n        switch(operation){\n           case \"+\":\n               if(!next.includes(\"%\")) {\n                   return (+prev + +next)\n               } else {\n                   return (+prev + ((+prev / 100) * (+next.slice(0, -1)))).toFixed(toFixedCheckPoint)\n               }\n           case \"*\":\n               if(!next.includes(\"%\")) {\n                   return (+prev * +next)\n               } else {\n                   return (+prev / 100) * (+next.slice(0, -1)).toFixed(toFixedCheckPoint)\n               }\n                \n           case \"/\":\n               if(!next.includes(\"%\")) {\n                   return (+prev / +next)\n               } else {\n                   return Number((+prev) / (+next.slice(0, -1) / 100)).toFixed(1)\n               }\n           case \"-\":\n               if(!next.includes(\"%\")) {\n                   return (+prev - +next)\n               } else {\n                   return (+prev) - ((+prev / 100) * (+next.slice(0, -1))).toFixed(toFixedCheckPoint)\n               }\n           default:\n               return operation\n        }\n    }  \n\n    const finalResult = () => {\n        const prevNumber = calcAct.current.currentNumberBefore;\n        const nextNumber = calcAct.current.currentNumberAfter;\n\n        let isPointAppear = false;\n        if(prevNumber.toString().includes(\".\") \n        || nextNumber.toString().includes('.') \n        || prevNumber.toString().includes(\"%\")\n        || nextNumber.toString().includes(\"%\")) {\n            isPointAppear = !isPointAppear;\n        }   \n        let toFixedCheckPoint = isPointAppear ? 1 : 0;\n        \n        switch(calcAct.current.currentOperation){\n           case \"+\":\n                if(!calcAct.current.currentNumberAfter.includes(\"%\")) {\n                   setResults(() => (+prevNumber + +nextNumber).toFixed(toFixedCheckPoint))\n                } else {\n                   setResults(() => (+prevNumber + ((+prevNumber / 100) * (+calcAct.current.currentNumberAfter.slice(0, -1)))).toFixed(toFixedCheckPoint));\n                }\n                break\n           case \"*\":\n                if(!calcAct.current.currentNumberAfter.includes(\"%\")) {\n                   setResults(() => (+prevNumber * +nextNumber).toFixed(toFixedCheckPoint))\n                } else {\n                   setResults(() => ((+prevNumber / 100) * (+calcAct.current.currentNumberAfter.slice(0, -1))).toFixed(toFixedCheckPoint))\n                }\n                break\n           case \"/\":\n                if(!calcAct.current.currentNumberAfter.includes(\"%\")) {\n                   setResults(() => (+prevNumber / +nextNumber).toFixed(toFixedCheckPoint))\n                } else { \n                   setResults(() => Number((+prevNumber) / (+calcAct.current.currentNumberAfter.slice(0, -1) / 100)).toFixed(1));\n                }\n                break\n           case \"-\":\n                if(!calcAct.current.currentNumberAfter.includes(\"%\")) {\n                   setResults(() => (+prevNumber - +nextNumber).toFixed(toFixedCheckPoint))\n                } else {\n                   setResults(() => (+prevNumber) - ((+prevNumber / 100) * (+calcAct.current.currentNumberAfter.slice(0, -1))).toFixed(toFixedCheckPoint));\n                }\n                break\n           default:\n               return calcAct.current.currentOperation\n        }\n        if(results !== null || results <= -1) {\n          const reverseResults = () => {\n            const res = getResults(calcAct.current.currentNumberBefore, calcAct.current.currentNumberAfter, calcAct.current.currentOperation)\n            const strRes = res.toString();\n            calcAct.current.currentNumberBefore = strRes;\n            calcAct.current.currentNumberAfter = \"\";\n            calcAct.current.currentOperation = \"\";\n            setResults(() => null)\n            setNumbersDisplay(() => strRes)\n          }\n          reverseResults()\n        }\n    }\n\n    const clear = () => {\n        setNumbersDisplay(() => \"\")\n        setResults(() => null)\n        calcAct.current.currentOperation = \"\";\n        calcAct.current.currentNumberBefore = \"\";\n        calcAct.current.currentNumberAfter = \"\";\n        calcAct.current.prevMemo = \"\";\n    }\n\n    return(\n        <Wrapper>\n            <AnswerBlock>\n                <GetNumbers>\n                    {numbersDisplay}\n                </GetNumbers>\n                <Answer>\n                    {results}\n                </Answer>\n            </AnswerBlock>\n            <FLexContainer>\n                    <RowBlock>\n                        <button style={{background: \"#d0cccc\"}} onClick={clear}>AC</button>\n                        <button onClick={memory}>\n                            ME\n                        </button>\n                        <button onClick={(e) => getItem(e)}>%</button>\n                        <button onClick={(e) => clickOperation(e)}>/</button>\n                    </RowBlock>\n                    <RowBlock>\n                        <button onClick={(e) => getItem(e)}>7</button>\n                        <button onClick={(e) => getItem(e)}>8</button>\n                        <button onClick={(e) => getItem(e)}>9</button>\n                        <button onClick={(e) => clickOperation(e)}>*</button>\n                    </RowBlock>\n                    <RowBlock>\n                        <button onClick={(e) => getItem(e)}>4</button>\n                        <button onClick={(e) => getItem(e)}>5</button>\n                        <button onClick={(e) => getItem(e)}>6</button>\n                        <button onClick={(e) => clickOperation(e)}>-</button>\n                    </RowBlock>\n                    <RowBlock>\n                        <button onClick={(e) => getItem(e)}>1</button>\n                        <button onClick={(e) => getItem(e)}>2</button>\n                        <button onClick={(e) => getItem(e)}>3</button>\n                        <button onClick={(e) => clickOperation(e)}>+</button>\n                    </RowBlock>\n                    <RowBlock>\n                        <button onClick={(e) => getItem(e)}>.</button>\n                        <button onClick={(e) => getItem(e)}>0</button>\n                        <ExceptionH3 onClick={finalResult}>=</ExceptionH3>\n                        <button onClick={memShowHandle}>MRC</button>\n                    </RowBlock>\n                </FLexContainer>\n        </Wrapper>\n    );\n}\n\nexport default Calculator;"]},"metadata":{},"sourceType":"module"}