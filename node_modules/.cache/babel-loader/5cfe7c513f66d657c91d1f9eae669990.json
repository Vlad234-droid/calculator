{"ast":null,"code":"var _jsxFileName = \"/Users/vladikbaryshpolets/Desktop/calculator/src/components/Calculator.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calculator = () => {\n  _s();\n\n  const calcAct = useRef({\n    currentOperation: \"\",\n    currentNumberBefore: \"\",\n    currentNumberAfter: \"\",\n    prevMemo: \"\"\n  });\n  const [numbersDisplay, setNumbersDisplay] = useState(\"\");\n  const [results, setResults] = useState(null);\n\n  const handleKeyDown = e => {\n    let key = e.key;\n\n    if (key === \"Enter\") {\n      finalResult();\n      return;\n    }\n\n    if (e.shiftKey && key === \"*\") {\n      key = \"*\";\n    }\n\n    if (e.shiftKey && key === \"%\") {\n      key = \"%\";\n    }\n\n    const reg = new RegExp(/^\\d+(\\.\\d+)?$/);\n\n    if (key.match(reg) !== null || key === \".\") {\n      setNumbersDisplay(numbersDisplay => `${numbersDisplay}${key}`);\n\n      if (calcAct.current.currentOperation === \"\") {\n        calcAct.current.currentNumberBefore = calcAct.current.currentNumberBefore.concat(key);\n      } else if (calcAct.current.currentOperation !== '') {\n        calcAct.current.currentNumberAfter = calcAct.current.currentNumberAfter.concat(key);\n      }\n    }\n\n    if (key === \"+\" || key === \"-\" || key === \"*\" || key === \"/\" || key === \"%\") {\n      if (calcAct.current.currentOperation === \"\") {\n        calcAct.current.currentOperation = key;\n        setNumbersDisplay(numbersDisplay => `${numbersDisplay}${key}`);\n      } else {\n        const res = getResults(calcAct.current.currentNumberBefore, calcAct.current.currentNumberAfter, calcAct.current.currentOperation);\n        const strRes = res.toString();\n        calcAct.current.currentNumberBefore = strRes;\n        calcAct.current.currentNumberAfter = \"\";\n        setNumbersDisplay(numbersDisplay => `${numbersDisplay}${key}`);\n        calcAct.current.currentOperation = key;\n      }\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n  }, []);\n  useEffect(() => {\n    if (results === \"Infinity\" || results === \"NaN\") {\n      alert(\"Never devide any numbers by zero, press OK and never do this\");\n      clear();\n    }\n  }, [results]);\n  useEffect(() => {\n    console.log(results);\n    console.log(calcAct.current.prevMemo);\n  }, [calcAct.current.prevMemo, results]);\n\n  const clickOperation = e => {\n    setNumbersDisplay(prev => `${prev}${e.target.innerText}`);\n\n    if (calcAct.current.currentOperation === '') {\n      calcAct.current.currentOperation = e.target.innerText;\n    } else if (calcAct.current.currentOperation !== '') {\n      const res = getResults(calcAct.current.currentNumberBefore, calcAct.current.currentNumberAfter, calcAct.current.currentOperation);\n      const strRes = res.toString();\n      calcAct.current.currentNumberBefore = strRes;\n      calcAct.current.currentNumberAfter = \"\";\n      calcAct.current.currentOperation = e.target.innerText;\n    }\n  };\n\n  const getItem = e => {\n    let getedItem = e.target.innerText;\n    if (+getedItem === 0 && (numbersDisplay === \"\" || numbersDisplay === 0)) return;\n\n    if (calcAct.current.currentOperation === \"\") {\n      calcAct.current.currentNumberBefore = calcAct.current.currentNumberBefore.concat(getedItem);\n    } else {\n      calcAct.current.currentNumberAfter = calcAct.current.currentNumberAfter.concat(getedItem);\n    }\n\n    setNumbersDisplay(numbersDisplay => `${numbersDisplay}${getedItem}`);\n  };\n\n  const memory = () => {\n    const res = getResults(calcAct.current.currentNumberBefore, calcAct.current.currentNumberAfter, calcAct.current.currentOperation) + Number(calcAct.current.prevMemo);\n    const strRes = res.toString();\n    calcAct.current.prevMemo = strRes;\n    calcAct.current.currentNumberBefore = \"\";\n    calcAct.current.currentNumberAfter = \"\";\n    setNumbersDisplay(() => \"\");\n  };\n\n  const getResults = (prev, next, operation) => {\n    switch (operation) {\n      case \"+\":\n        return +prev + +next;\n\n      case \"*\":\n        return +prev * +next;\n\n      case \"/\":\n        return +prev / +next;\n\n      case \"%\":\n        return +prev % +next;\n\n      case \"-\":\n        return +prev - +next;\n\n      default:\n        return operation;\n    }\n  };\n\n  const finalResult = () => {\n    const prevNumber = Number(calcAct.current.currentNumberBefore);\n    const nextNumber = Number(calcAct.current.currentNumberAfter);\n    let isPointAppear = false;\n\n    if (prevNumber.toString().includes(\".\") || nextNumber.toString().includes('.')) {\n      isPointAppear = !isPointAppear;\n    }\n\n    let toFixedCheckPoint = isPointAppear ? 1 : 0;\n\n    switch (calcAct.current.currentOperation) {\n      case \"+\":\n        setResults(() => (prevNumber + nextNumber).toFixed(toFixedCheckPoint));\n        break;\n\n      case \"*\":\n        setResults(() => (prevNumber * nextNumber).toFixed(toFixedCheckPoint));\n        break;\n\n      case \"/\":\n        setResults(() => (prevNumber / nextNumber).toFixed(toFixedCheckPoint));\n        break;\n\n      case \"%\":\n        setResults(() => (prevNumber % nextNumber).toFixed(toFixedCheckPoint));\n        break;\n\n      case \"-\":\n        setResults(() => (prevNumber - nextNumber).toFixed(toFixedCheckPoint));\n        break;\n\n      default:\n        return calcAct.current.currentOperation;\n    }\n\n    if (results !== null || results < -1) {\n      const reverseResults = () => {\n        const res = getResults(calcAct.current.currentNumberBefore, calcAct.current.currentNumberAfter, calcAct.current.currentOperation);\n        const strRes = res.toString();\n        calcAct.current.currentNumberBefore = strRes;\n        calcAct.current.currentNumberAfter = \"\";\n        calcAct.current.currentOperation = \"\";\n        setResults(() => null);\n        setNumbersDisplay(() => strRes);\n      };\n\n      reverseResults();\n    }\n  };\n\n  const clear = () => {\n    setNumbersDisplay(() => \"\");\n    setResults(() => null);\n    calcAct.current.currentOperation = \"\";\n    calcAct.current.currentNumberBefore = \"\";\n    calcAct.current.currentNumberAfter = \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(AnswerBlock, {\n      children: [/*#__PURE__*/_jsxDEV(GetNumbers, {\n        children: numbersDisplay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Answer, {\n        children: results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FLexContainer, {\n      children: [/*#__PURE__*/_jsxDEV(RowBlock, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            background: \"#d0cccc\"\n          },\n          onClick: clear,\n          children: \"AC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: memory,\n          children: \"ME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => clickOperation(e),\n          children: \"%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => clickOperation(e),\n          children: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(RowBlock, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \"7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \"9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => clickOperation(e),\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(RowBlock, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => clickOperation(e),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(RowBlock, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => clickOperation(e),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(RowBlock, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \".\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ExceptionH3, {\n          onClick: finalResult,\n          children: \"=\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"MRC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Calculator, \"n/pwhW/V2BBP6r4DHAMqNm8vXb8=\");\n\n_c = Calculator;\nconst Wrapper = styled.div`\n    width: 400px;\n    height: 600px;\n    background: #cee2f3;\n    border: 0.5px solid black;\n    padding: 25px;\n`;\n_c2 = Wrapper;\nconst AnswerBlock = styled.div`\n    height: calc(100% / 5);\n    width: 100%;\n    background: white;\n    border: 0.5px solid black;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    justify-content: center;\n    color: black;\n`;\n_c3 = AnswerBlock;\nconst GetNumbers = styled.div`\n    width: calc(100% / 2);\n    height: 40px;\n    text-align: center;\n    padding-top: 10px;\n`;\n_c4 = GetNumbers;\nconst Answer = styled.div`\n    width: calc(100% / 2);\n    height: 40px;\n    padding-top: 10px;\n    text-align: right;\n    padding-right: 15px;\n`;\n_c5 = Answer;\nconst FLexContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin-top: 10px;\n`;\n_c6 = FLexContainer;\nconst RowBlock = styled.div`\n    display: grid;\n    grid-template-columns: repeat(4, calc(((400px / 4) - 21px)));\n    margin-top: 25px;\n    grid-column-gap: 10px;\n    grid-auto-rows: 60px;\n\n    & > *:last-child {\n        border: 0.5px solid #fcb13e;\n    }\n\n    button {\n        border: 1px solid black;\n        background: white;\n        text-align: center;\n        cursor: pointer;\n    }\n`;\n_c7 = RowBlock;\nconst ExceptionH3 = styled.button`\n    border: 0.5px solid black !important;\n    background: #ff9c04 !important;\n`;\n_c8 = ExceptionH3;\nexport default Calculator;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Calculator\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"AnswerBlock\");\n$RefreshReg$(_c4, \"GetNumbers\");\n$RefreshReg$(_c5, \"Answer\");\n$RefreshReg$(_c6, \"FLexContainer\");\n$RefreshReg$(_c7, \"RowBlock\");\n$RefreshReg$(_c8, \"ExceptionH3\");","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/calculator/src/components/Calculator.jsx"],"names":["React","useState","useEffect","useRef","styled","Calculator","calcAct","currentOperation","currentNumberBefore","currentNumberAfter","prevMemo","numbersDisplay","setNumbersDisplay","results","setResults","handleKeyDown","e","key","finalResult","shiftKey","reg","RegExp","match","current","concat","res","getResults","strRes","toString","window","addEventListener","alert","clear","console","log","clickOperation","prev","target","innerText","getItem","getedItem","memory","Number","next","operation","prevNumber","nextNumber","isPointAppear","includes","toFixedCheckPoint","toFixed","reverseResults","background","Wrapper","div","AnswerBlock","GetNumbers","Answer","FLexContainer","RowBlock","ExceptionH3","button"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from \"styled-components\"\n\nconst Calculator = () => {\n\n    const calcAct = useRef({\n        currentOperation: \"\",\n        currentNumberBefore: \"\",\n        currentNumberAfter: \"\",\n        prevMemo: \"\",\n    })\n\n    const [numbersDisplay, setNumbersDisplay] = useState(\"\");\n\n    const [ results, setResults] = useState(null);\n\n   \n    const handleKeyDown = (e) => {\n        let key = e.key;\n        if (key === \"Enter\") {\n            finalResult()\n            return\n        }\n        if(e.shiftKey && key === \"*\") {\n            key = \"*\"\n        }\n        if(e.shiftKey && key === \"%\") {\n            key = \"%\"\n        }\n\n        const reg = new RegExp(/^\\d+(\\.\\d+)?$/);\n        if(key.match(reg) !== null || key === \".\") {\n            setNumbersDisplay((numbersDisplay) => (`${numbersDisplay}${key}`))\n            if(calcAct.current.currentOperation === \"\") {\n                calcAct.current.currentNumberBefore = calcAct.current.currentNumberBefore.concat(key);\n            } else if (calcAct.current.currentOperation !== '') {\n                calcAct.current.currentNumberAfter = calcAct.current.currentNumberAfter.concat(key);\n            }\n        }\n\n        if(key === \"+\" || key === \"-\" || key === \"*\" || key === \"/\" || key === \"%\") {\n            if(calcAct.current.currentOperation === \"\") {\n                calcAct.current.currentOperation = key;\n                setNumbersDisplay((numbersDisplay) => (`${numbersDisplay}${key}`));\n            } else {\n                const res = getResults(calcAct.current.currentNumberBefore, calcAct.current.currentNumberAfter, calcAct.current.currentOperation)\n                const strRes = res.toString();\n                calcAct.current.currentNumberBefore = strRes;\n                calcAct.current.currentNumberAfter = \"\";\n                setNumbersDisplay((numbersDisplay) => (`${numbersDisplay}${key}`));\n                calcAct.current.currentOperation = key;\n            }\n            \n        }\n    };\n    useEffect(() => {\n        window.addEventListener('keydown', handleKeyDown);\n    }, []);\n    useEffect(() => {\n        if(results === \"Infinity\" || results === \"NaN\") {\n            alert(\"Never devide any numbers by zero, press OK and never do this\")\n            clear()\n        }\n    }, [results])\n    \n    useEffect(() => {\n        console.log(results);\n        console.log(calcAct.current.prevMemo);\n    }, [calcAct.current.prevMemo,results])\n\n    const clickOperation = (e) => {\n        setNumbersDisplay((prev) => `${prev}${e.target.innerText}`)\n        if(calcAct.current.currentOperation === '') {\n            calcAct.current.currentOperation = e.target.innerText;\n        } else if (calcAct.current.currentOperation !== '') {\n            const res = getResults(calcAct.current.currentNumberBefore, calcAct.current.currentNumberAfter, calcAct.current.currentOperation)\n            const strRes = res.toString();\n            calcAct.current.currentNumberBefore = strRes;\n            calcAct.current.currentNumberAfter = \"\";\n            calcAct.current.currentOperation = e.target.innerText;\n        }\n    }\n\n    const getItem = (e) => {\n        let getedItem = e.target.innerText\n        if( +getedItem === 0 && (numbersDisplay === \"\" || numbersDisplay === 0 )) return\n        if(calcAct.current.currentOperation === \"\") {\n            calcAct.current.currentNumberBefore = calcAct.current.currentNumberBefore.concat(getedItem);\n        } else {\n            calcAct.current.currentNumberAfter = calcAct.current.currentNumberAfter.concat(getedItem);\n        }\n        setNumbersDisplay((numbersDisplay) => (`${numbersDisplay}${getedItem}`))\n    }\n\n    const memory = () => {\n        const res = getResults(\n        calcAct.current.currentNumberBefore, \n        calcAct.current.currentNumberAfter, \n        calcAct.current.currentOperation) + Number(calcAct.current.prevMemo);\n        \n        const strRes = res.toString();\n        calcAct.current.prevMemo = strRes;\n        calcAct.current.currentNumberBefore = \"\";\n        calcAct.current.currentNumberAfter = \"\";\n        setNumbersDisplay(() => \"\")\n    }\n\n\n    const getResults = (prev, next, operation) => {\n        switch(operation){\n           case \"+\":\n                return (+prev + +next)\n           case \"*\":\n                return (+prev * +next)\n           case \"/\":\n                return (+prev / +next)\n           case \"%\":\n                return (+prev % +next)\n           case \"-\":\n                return (+prev - +next)\n           default:\n               return operation\n        }\n    }  \n\n    const finalResult = () => {\n        const prevNumber = Number(calcAct.current.currentNumberBefore);\n        const nextNumber = Number(calcAct.current.currentNumberAfter);\n\n        let isPointAppear = false;\n        if(prevNumber.toString().includes(\".\") || nextNumber.toString().includes('.')) {\n            isPointAppear = !isPointAppear;\n        }   \n        let toFixedCheckPoint = isPointAppear ? 1 : 0;\n        \n        switch(calcAct.current.currentOperation){\n           case \"+\":\n                setResults(() => (prevNumber + nextNumber).toFixed(toFixedCheckPoint))\n                break\n           case \"*\":\n                setResults(() => (prevNumber * nextNumber).toFixed(toFixedCheckPoint))\n                break\n           case \"/\":\n                setResults(() => (prevNumber / nextNumber).toFixed(toFixedCheckPoint))\n                break\n           case \"%\":\n                setResults(() => (prevNumber % nextNumber).toFixed(toFixedCheckPoint))\n                break\n           case \"-\":\n                setResults(() => (prevNumber - nextNumber).toFixed(toFixedCheckPoint))\n                break\n           default:\n               return calcAct.current.currentOperation\n        }\n        if(results !== null || results < -1) {\n          const reverseResults = () => {\n            const res = getResults(calcAct.current.currentNumberBefore, calcAct.current.currentNumberAfter, calcAct.current.currentOperation)\n            const strRes = res.toString();\n            calcAct.current.currentNumberBefore = strRes;\n            calcAct.current.currentNumberAfter = \"\";\n            calcAct.current.currentOperation = \"\";\n            setResults(() => null)\n            setNumbersDisplay(() => strRes)\n          }\n          reverseResults()\n        }\n    }\n\n    const clear = () => {\n        setNumbersDisplay(() => \"\")\n        setResults(() => null)\n        calcAct.current.currentOperation = \"\";\n        calcAct.current.currentNumberBefore = \"\";\n        calcAct.current.currentNumberAfter = \"\";\n    }\n\n    return(\n        <Wrapper>\n            <AnswerBlock>\n                <GetNumbers>\n                    {numbersDisplay}\n                </GetNumbers>\n                <Answer>\n                    {results}\n                </Answer>\n            </AnswerBlock>\n            <FLexContainer>\n                    <RowBlock>\n                        <button style={{background: \"#d0cccc\"}} onClick={clear}>AC</button>\n                        <button onClick={memory}>\n                            ME\n                        </button>\n                        <button onClick={(e) => clickOperation(e)}>%</button>\n                        <button onClick={(e) => clickOperation(e)}>/</button>\n                    </RowBlock>\n                    <RowBlock>\n                        <button onClick={(e) => getItem(e)}>7</button>\n                        <button onClick={(e) => getItem(e)}>8</button>\n                        <button onClick={(e) => getItem(e)}>9</button>\n                        <button onClick={(e) => clickOperation(e)}>*</button>\n                    </RowBlock>\n                    <RowBlock>\n                        <button onClick={(e) => getItem(e)}>4</button>\n                        <button onClick={(e) => getItem(e)}>5</button>\n                        <button onClick={(e) => getItem(e)}>6</button>\n                        <button onClick={(e) => clickOperation(e)}>-</button>\n                    </RowBlock>\n                    <RowBlock>\n                        <button onClick={(e) => getItem(e)}>1</button>\n                        <button onClick={(e) => getItem(e)}>2</button>\n                        <button onClick={(e) => getItem(e)}>3</button>\n                        <button onClick={(e) => clickOperation(e)}>+</button>\n                    </RowBlock>\n                    <RowBlock>\n                        <button onClick={(e) => getItem(e)}>.</button>\n                        <button onClick={(e) => getItem(e)}>0</button>\n                        <ExceptionH3 onClick={finalResult}>=</ExceptionH3>\n                        <button>MRC</button>\n                    </RowBlock>\n                </FLexContainer>\n        </Wrapper>\n    );\n}\nconst Wrapper = styled.div`\n    width: 400px;\n    height: 600px;\n    background: #cee2f3;\n    border: 0.5px solid black;\n    padding: 25px;\n`;\nconst AnswerBlock = styled.div`\n    height: calc(100% / 5);\n    width: 100%;\n    background: white;\n    border: 0.5px solid black;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    justify-content: center;\n    color: black;\n`;\nconst GetNumbers = styled.div`\n    width: calc(100% / 2);\n    height: 40px;\n    text-align: center;\n    padding-top: 10px;\n`;\nconst Answer = styled.div`\n    width: calc(100% / 2);\n    height: 40px;\n    padding-top: 10px;\n    text-align: right;\n    padding-right: 15px;\n`;\n\nconst FLexContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin-top: 10px;\n`;\nconst RowBlock = styled.div`\n    display: grid;\n    grid-template-columns: repeat(4, calc(((400px / 4) - 21px)));\n    margin-top: 25px;\n    grid-column-gap: 10px;\n    grid-auto-rows: 60px;\n\n    & > *:last-child {\n        border: 0.5px solid #fcb13e;\n    }\n\n    button {\n        border: 1px solid black;\n        background: white;\n        text-align: center;\n        cursor: pointer;\n    }\n`;\nconst ExceptionH3 = styled.button`\n    border: 0.5px solid black !important;\n    background: #ff9c04 !important;\n`;\nexport default Calculator;"]},"metadata":{},"sourceType":"module"}