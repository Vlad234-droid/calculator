{"ast":null,"code":"var _jsxFileName = \"/Users/vladikbaryshpolets/Desktop/calculator/src/components/Calculator.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Wrapper, AnswerBlock, GetNumbers, Answer, FLexContainer, RowBlock, ExceptionH3 } from \"./StyledCalculator\";\nimport { adding, multiply, devide, subtract, isExists, keyMatch, refsToEmptyStr, keyMatchReg } from \"./util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calculator = () => {\n  _s();\n\n  const calcAct = useRef({\n    currentOperation: \"\",\n    currentNumberBefore: \"\",\n    currentNumberAfter: \"\",\n    prevMemo: \"\"\n  });\n  const [numbersDisplay, setNumbersDisplay] = useState(\"\");\n  const [results, setResults] = useState(null);\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n  }, []);\n  useEffect(() => {\n    if (results === \"Infinity\" || results === \"NaN\") {\n      alert(\"Never devide any numbers by zero, press OK and never do this\");\n      clear();\n    }\n  }, [results]);\n\n  const handleKeyDown = e => {\n    let key = e.key;\n\n    if (key === \"Enter\") {\n      finalResult();\n      return;\n    }\n\n    if (e.shiftKey && key === \"*\") {\n      key = \"*\";\n    }\n\n    if (e.shiftKey && key === \"%\") {\n      key = \"%\";\n    }\n\n    const reg = new RegExp(/^\\d+(\\.\\d+)?$/);\n\n    if (keyMatchReg(key, reg)) {\n      setNumbersDisplay(numbersDisplay => `${numbersDisplay}${key}`);\n\n      if (calcAct.current.currentOperation === \"\") {\n        calcAct.current.currentNumberBefore = calcAct.current.currentNumberBefore.concat(key);\n      } else if (calcAct.current.currentOperation !== '') {\n        calcAct.current.currentNumberAfter = calcAct.current.currentNumberAfter.concat(key);\n      }\n    }\n\n    if (keyMatch(key)) {\n      if (calcAct.current.currentOperation === \"\") {\n        calcAct.current.currentOperation = key;\n        setNumbersDisplay(numbersDisplay => `${numbersDisplay}${key}`);\n      } else {\n        const res = getResults(calcAct.current.currentNumberBefore, calcAct.current.currentNumberAfter, calcAct.current.currentOperation);\n        const strRes = res.toString();\n        calcAct.current.currentNumberBefore = strRes;\n        calcAct.current.currentNumberAfter = \"\";\n        setNumbersDisplay(numbersDisplay => `${numbersDisplay}${key}`);\n        calcAct.current.currentOperation = key;\n      }\n    }\n  };\n\n  const clickOperation = e => {\n    setNumbersDisplay(prev => `${prev}${e.target.innerText}`);\n\n    if (calcAct.current.currentOperation === '') {\n      calcAct.current.currentOperation = e.target.innerText;\n    } else if (calcAct.current.currentOperation !== '') {\n      const res = getResults(calcAct.current.currentNumberBefore, calcAct.current.currentNumberAfter, calcAct.current.currentOperation);\n      const strRes = res.toString();\n      calcAct.current.currentNumberBefore = strRes;\n      calcAct.current.currentNumberAfter = \"\";\n      calcAct.current.currentOperation = e.target.innerText;\n    }\n  };\n\n  const getItem = e => {\n    let getedItem = e.target.innerText;\n    if (+getedItem === 0 && (numbersDisplay === \"\" || numbersDisplay === 0)) return;\n\n    if (calcAct.current.currentOperation === \"\") {\n      calcAct.current.currentNumberBefore = calcAct.current.currentNumberBefore.concat(getedItem);\n    } else {\n      calcAct.current.currentNumberAfter = calcAct.current.currentNumberAfter.concat(getedItem);\n    }\n\n    setNumbersDisplay(numbersDisplay => `${numbersDisplay}${getedItem}`);\n  };\n\n  const memory = () => {\n    const res = getResults(calcAct.current.currentNumberBefore, calcAct.current.currentNumberAfter, calcAct.current.currentOperation) + Number(calcAct.current.prevMemo);\n    const strRes = res.toString();\n    calcAct.current.prevMemo = strRes;\n    calcAct.current.currentNumberBefore = \"\";\n    calcAct.current.currentNumberAfter = \"\";\n    calcAct.current.currentOperation = \"\";\n    setNumbersDisplay(() => \"\");\n  };\n\n  const memShowHandle = () => {\n    setResults(() => Number(calcAct.current.prevMemo));\n    calcAct.current.currentNumberBefore = calcAct.current.prevMemo;\n    calcAct.current.currentNumberAfter = \"\";\n    calcAct.current.currentOperation = \"\";\n    setNumbersDisplay(() => calcAct.current.currentNumberBefore);\n  };\n\n  const getResults = (prev, next, operation) => {\n    let isPointAppear = false;\n\n    if (isExists(prev, next)) {\n      isPointAppear = !isPointAppear;\n    }\n\n    let toFixedCheckPoint = isPointAppear ? 1 : 0;\n\n    switch (operation) {\n      case \"+\":\n        if (!next.includes(\"%\")) {\n          return +prev + +next;\n        } else {\n          return adding(prev, next, toFixedCheckPoint);\n        }\n\n      case \"*\":\n        if (!next.includes(\"%\")) {\n          return +prev * +next;\n        } else {\n          return multiply(prev, next, toFixedCheckPoint);\n        }\n\n      case \"/\":\n        if (!next.includes(\"%\")) {\n          return +prev / +next;\n        } else {\n          return devide(prev, next);\n        }\n\n      case \"-\":\n        if (!next.includes(\"%\")) {\n          return +prev - +next;\n        } else {\n          return subtract(prev, next, toFixedCheckPoint);\n        }\n\n      default:\n        return operation;\n    }\n  };\n\n  const finalResult = () => {\n    const prev = calcAct.current.currentNumberBefore;\n    const next = calcAct.current.currentNumberAfter;\n    let isPointAppear = false;\n\n    if (isExists(prev, next)) {\n      isPointAppear = !isPointAppear;\n    }\n\n    let toFixedCheckPoint = isPointAppear ? 1 : 0;\n\n    switch (calcAct.current.currentOperation) {\n      case \"+\":\n        if (!calcAct.current.currentNumberAfter.includes(\"%\")) {\n          setResults(() => (+prev + +next).toFixed(toFixedCheckPoint));\n        } else {\n          setResults(() => adding(prev, next, toFixedCheckPoint));\n        }\n\n        break;\n\n      case \"*\":\n        if (!calcAct.current.currentNumberAfter.includes(\"%\")) {\n          setResults(() => (+prev * +next).toFixed(toFixedCheckPoint));\n        } else {\n          setResults(() => multiply(prev, next, toFixedCheckPoint));\n        }\n\n        break;\n\n      case \"/\":\n        if (!calcAct.current.currentNumberAfter.includes(\"%\")) {\n          setResults(() => (+prev / +next).toFixed(toFixedCheckPoint));\n        } else {\n          setResults(() => devide(prev, next));\n        }\n\n        break;\n\n      case \"-\":\n        if (!calcAct.current.currentNumberAfter.includes(\"%\")) {\n          setResults(() => (+prev - +next).toFixed(toFixedCheckPoint));\n        } else {\n          setResults(() => subtract(prev, next, toFixedCheckPoint));\n        }\n\n        break;\n\n      default:\n        return calcAct.current.currentOperation;\n    }\n\n    if (results !== null || results <= -1) {\n      const reverseResults = () => {\n        const res = getResults(calcAct.current.currentNumberBefore, calcAct.current.currentNumberAfter, calcAct.current.currentOperation);\n        const strRes = res.toString();\n        calcAct.current.currentNumberBefore = strRes;\n        calcAct.current.currentNumberAfter = \"\";\n        calcAct.current.currentOperation = \"\";\n        setResults(() => null);\n        setNumbersDisplay(() => strRes);\n      };\n\n      reverseResults();\n    }\n  };\n\n  const clear = () => {\n    setNumbersDisplay(() => \"\");\n    setResults(() => null);\n    refsToEmptyStr(calcAct);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(AnswerBlock, {\n      children: [/*#__PURE__*/_jsxDEV(GetNumbers, {\n        children: numbersDisplay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Answer, {\n        children: results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FLexContainer, {\n      children: [/*#__PURE__*/_jsxDEV(RowBlock, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            background: \"#d0cccc\"\n          },\n          onClick: clear,\n          children: \"AC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: memory,\n          children: \"ME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \"%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => clickOperation(e),\n          children: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(RowBlock, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \"7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \"9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => clickOperation(e),\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(RowBlock, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => clickOperation(e),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(RowBlock, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => clickOperation(e),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(RowBlock, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \".\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => getItem(e),\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ExceptionH3, {\n          \"data-testid\": \"results\",\n          onClick: finalResult,\n          children: \"=\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: memShowHandle,\n          children: \"MRC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Calculator, \"bt3KygyoX+Pk/8M4jLDJcn148Z4=\");\n\n_c = Calculator;\nexport default Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"sources":["/Users/vladikbaryshpolets/Desktop/calculator/src/components/Calculator.jsx"],"names":["React","useState","useEffect","useRef","Wrapper","AnswerBlock","GetNumbers","Answer","FLexContainer","RowBlock","ExceptionH3","adding","multiply","devide","subtract","isExists","keyMatch","refsToEmptyStr","keyMatchReg","Calculator","calcAct","currentOperation","currentNumberBefore","currentNumberAfter","prevMemo","numbersDisplay","setNumbersDisplay","results","setResults","window","addEventListener","handleKeyDown","alert","clear","e","key","finalResult","shiftKey","reg","RegExp","current","concat","res","getResults","strRes","toString","clickOperation","prev","target","innerText","getItem","getedItem","memory","Number","memShowHandle","next","operation","isPointAppear","toFixedCheckPoint","includes","toFixed","reverseResults","background"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Wrapper, AnswerBlock, GetNumbers, Answer, \n    FLexContainer, RowBlock, ExceptionH3 } from \"./StyledCalculator\";\n\nimport { adding, multiply, devide, subtract,\n         isExists, keyMatch, refsToEmptyStr,\n         keyMatchReg } from \"./util\";\n\n\nconst Calculator = () => {\n\n    const calcAct = useRef({\n        currentOperation: \"\",\n        currentNumberBefore: \"\",\n        currentNumberAfter: \"\",\n        prevMemo: \"\",\n    })\n\n    const [numbersDisplay, setNumbersDisplay] = useState(\"\");\n\n    const [ results, setResults] = useState(null);\n\n    useEffect(() => {\n        window.addEventListener('keydown', handleKeyDown);\n    }, []);\n\n    useEffect(() => {\n        if(results === \"Infinity\" || results === \"NaN\") {\n            alert(\"Never devide any numbers by zero, press OK and never do this\")\n            clear()\n        }\n    }, [results])\n\n   \n    const handleKeyDown = (e) => {\n        let key = e.key;\n        if (key === \"Enter\") {\n            finalResult()\n            return\n        }\n        if(e.shiftKey && key === \"*\") {\n            key = \"*\"\n        }\n        if(e.shiftKey && key === \"%\") {\n            key = \"%\"\n        }\n\n        const reg = new RegExp(/^\\d+(\\.\\d+)?$/);\n        if(keyMatchReg(key, reg)) {\n            setNumbersDisplay((numbersDisplay) => (`${numbersDisplay}${key}`))\n            if(calcAct.current.currentOperation === \"\") {\n                calcAct.current.currentNumberBefore = calcAct.current.currentNumberBefore.concat(key);\n            } else if (calcAct.current.currentOperation !== '') {\n                calcAct.current.currentNumberAfter = calcAct.current.currentNumberAfter.concat(key);\n            }\n        }\n\n        if(keyMatch(key)) {\n            if(calcAct.current.currentOperation === \"\") {\n                calcAct.current.currentOperation = key;\n                setNumbersDisplay((numbersDisplay) => (`${numbersDisplay}${key}`));\n            } else {\n                const res = getResults(calcAct.current.currentNumberBefore, calcAct.current.currentNumberAfter, calcAct.current.currentOperation)\n                const strRes = res.toString();\n                calcAct.current.currentNumberBefore = strRes;\n                calcAct.current.currentNumberAfter = \"\";\n                setNumbersDisplay((numbersDisplay) => (`${numbersDisplay}${key}`));\n                calcAct.current.currentOperation = key;\n            }\n            \n        }\n    };\n\n    const clickOperation = (e) => {\n        setNumbersDisplay((prev) => `${prev}${e.target.innerText}`)\n        if(calcAct.current.currentOperation === '') {\n            calcAct.current.currentOperation = e.target.innerText;\n        } else if (calcAct.current.currentOperation !== '') {\n            const res = getResults(calcAct.current.currentNumberBefore, calcAct.current.currentNumberAfter, calcAct.current.currentOperation)\n            const strRes = res.toString();\n            calcAct.current.currentNumberBefore = strRes;\n            calcAct.current.currentNumberAfter = \"\";\n            calcAct.current.currentOperation = e.target.innerText;\n        }\n    }\n\n    const getItem = (e) => {\n        let getedItem = e.target.innerText\n        if( +getedItem === 0 && (numbersDisplay === \"\" || numbersDisplay === 0 )) return\n        if(calcAct.current.currentOperation === \"\") {\n            calcAct.current.currentNumberBefore = calcAct.current.currentNumberBefore.concat(getedItem);\n        } else {\n            calcAct.current.currentNumberAfter = calcAct.current.currentNumberAfter.concat(getedItem);\n        }\n        setNumbersDisplay((numbersDisplay) => (`${numbersDisplay}${getedItem}`))\n    }\n\n    const memory = () => {\n        const res = getResults(\n        calcAct.current.currentNumberBefore, \n        calcAct.current.currentNumberAfter, \n        calcAct.current.currentOperation) + Number(calcAct.current.prevMemo);\n        const strRes = res.toString();\n        calcAct.current.prevMemo = strRes;\n        calcAct.current.currentNumberBefore = \"\";\n        calcAct.current.currentNumberAfter = \"\";\n        calcAct.current.currentOperation = \"\";\n        setNumbersDisplay(() => \"\")\n    }\n\n    const memShowHandle = () => {\n        setResults(() => Number(calcAct.current.prevMemo));\n        calcAct.current.currentNumberBefore = calcAct.current.prevMemo;\n        calcAct.current.currentNumberAfter = \"\";\n        calcAct.current.currentOperation = \"\";\n        setNumbersDisplay(() => calcAct.current.currentNumberBefore)\n    }\n\n    const getResults = (prev, next, operation) => {\n\n        let isPointAppear = false;\n        \n        if(isExists(prev, next)) {\n            isPointAppear = !isPointAppear;\n        }   \n        let toFixedCheckPoint = isPointAppear ? 1 : 0;\n\n        switch(operation){\n           case \"+\":\n               if(!next.includes(\"%\")) {\n                   return (+prev + +next)\n               } else {\n                   return adding(prev, next, toFixedCheckPoint)\n               }\n           case \"*\":\n               if(!next.includes(\"%\")) {\n                   return (+prev * +next)\n               } else {\n                   return multiply(prev, next, toFixedCheckPoint)\n               }\n           case \"/\":\n               if(!next.includes(\"%\")) {\n                   return (+prev / +next)\n               } else {\n                   return devide(prev, next)\n               }\n           case \"-\":\n               if(!next.includes(\"%\")) {\n                   return (+prev - +next)\n               } else {\n                   return subtract(prev, next, toFixedCheckPoint)\n               }\n           default:\n               return operation\n        }\n    }  \n\n    const finalResult = () => {\n        const prev = calcAct.current.currentNumberBefore;\n        const next = calcAct.current.currentNumberAfter;\n\n        let isPointAppear = false;\n        if(isExists(prev, next)) {\n            isPointAppear = !isPointAppear;\n        }   \n        let toFixedCheckPoint = isPointAppear ? 1 : 0;\n        \n        switch(calcAct.current.currentOperation){\n           case \"+\":\n                if(!calcAct.current.currentNumberAfter.includes(\"%\")) {\n                   setResults(() => (+prev + +next).toFixed(toFixedCheckPoint))\n                } else {\n                   setResults(() => adding(prev, next, toFixedCheckPoint));\n                }\n                break\n           case \"*\":\n                if(!calcAct.current.currentNumberAfter.includes(\"%\")) {\n                   setResults(() => (+prev * +next).toFixed(toFixedCheckPoint))\n                } else {\n                   setResults(() => multiply(prev, next, toFixedCheckPoint))\n                }\n                break\n           case \"/\":\n                if(!calcAct.current.currentNumberAfter.includes(\"%\")) {\n                   setResults(() => (+prev / +next).toFixed(toFixedCheckPoint))\n                } else { \n                   setResults(() => devide(prev, next));\n                }\n                break\n           case \"-\":\n                if(!calcAct.current.currentNumberAfter.includes(\"%\")) {\n                   setResults(() => (+prev - +next).toFixed(toFixedCheckPoint))\n                } else {\n                   setResults(() => subtract(prev, next, toFixedCheckPoint));\n                }\n                break\n           default:\n               return calcAct.current.currentOperation\n        }\n        if(results !== null || results <= -1) {\n          const reverseResults = () => {\n            const res = getResults(calcAct.current.currentNumberBefore, calcAct.current.currentNumberAfter, calcAct.current.currentOperation)\n            const strRes = res.toString();\n            calcAct.current.currentNumberBefore = strRes;\n            calcAct.current.currentNumberAfter = \"\";\n            calcAct.current.currentOperation = \"\";\n            setResults(() => null)\n            setNumbersDisplay(() => strRes)\n          }\n          reverseResults()\n        }\n    }\n\n    const clear = () => {\n        setNumbersDisplay(() => \"\")\n        setResults(() => null)\n        refsToEmptyStr(calcAct);\n    }\n    return(\n        <Wrapper>\n            <AnswerBlock>\n                <GetNumbers>\n                    {numbersDisplay}\n                </GetNumbers>\n                <Answer>\n                    {results}\n                </Answer>\n            </AnswerBlock>\n            <FLexContainer>\n                    <RowBlock>\n                        <button style={{background: \"#d0cccc\"}} onClick={clear}>AC</button>\n                        <button onClick={memory}>\n                            ME\n                        </button>\n                        <button onClick={(e) => getItem(e)}>%</button>\n                        <button onClick={(e) => clickOperation(e)}>/</button>\n                    </RowBlock>\n                    <RowBlock>\n                        <button onClick={(e) => getItem(e)}>7</button>\n                        <button onClick={(e) => getItem(e)}>8</button>\n                        <button onClick={(e) => getItem(e)}>9</button>\n                        <button onClick={(e) => clickOperation(e)}>*</button>\n                    </RowBlock>\n                    <RowBlock>\n                        <button onClick={(e) => getItem(e)}>4</button>\n                        <button onClick={(e) => getItem(e)}>5</button>\n                        <button onClick={(e) => getItem(e)}>6</button>\n                        <button onClick={(e) => clickOperation(e)}>-</button>\n                    </RowBlock>\n                    <RowBlock>\n                        <button onClick={(e) => getItem(e)}>1</button>\n                        <button onClick={(e) => getItem(e)}>2</button>\n                        <button onClick={(e) => getItem(e)}>3</button>\n                        <button onClick={(e) => clickOperation(e)}>+</button>\n                    </RowBlock>\n                    <RowBlock>\n                        <button onClick={(e) => getItem(e)}>.</button>\n                        <button onClick={(e) => getItem(e)}>0</button>\n                        <ExceptionH3 data-testid=\"results\" onClick={finalResult}>=</ExceptionH3>\n                        <button onClick={memShowHandle}>MRC</button>\n                    </RowBlock>\n                </FLexContainer>\n        </Wrapper>\n    );\n}\n\nexport default Calculator;"]},"metadata":{},"sourceType":"module"}